// Code generated by go-bindata.
// sources:
// src/templates/archives.html
// src/templates/article/article.html
// src/templates/article/disqus.html
// src/templates/article/sharethis.html
// src/templates/atom.xml
// src/templates/base/analytics.html
// src/templates/base/base.html
// src/templates/base/footer.html
// src/templates/base/header.html
// src/templates/category.html
// src/templates/index.html
// src/templates/page.html
// src/templates/tag.html
// src/templates/templates/archives.html
// src/templates/templates/article/article.html
// src/templates/templates/article/disqus.html
// src/templates/templates/article/sharethis.html
// src/templates/templates/atom.xml
// src/templates/templates/base/analytics.html
// src/templates/templates/base/base.html
// src/templates/templates/base/footer.html
// src/templates/templates/base/header.html
// src/templates/templates/category.html
// src/templates/templates/index.html
// src/templates/templates/page.html
// src/templates/templates/tag.html
// DO NOT EDIT!

package templates

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _srcTemplatesArchivesHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x4c\x8f\xb1\x4e\xc4\x30\x0c\x86\xf7\x3e\x85\x15\x75\x84\x54\xac\x28\x8d\x74\x82\x81\xfd\xd8\x51\xd4\xb8\xad\xa5\x5c\x2a\xa5\x3e\x86\x33\x79\x77\x5c\xca\x15\xa6\xc8\xbf\xbe\xcf\xce\x2f\x12\x71\xa4\x8c\x60\x98\x38\xa1\xa9\xb5\x39\x95\x61\xa6\x4f\x5c\xe1\x0b\x44\xec\x99\x18\xed\xcb\x92\x47\x9a\xec\xfb\x86\x28\x21\x82\x39\xea\xdb\xfc\xd9\xc3\x92\x19\x33\x6f\xbe\x9b\x9f\xfc\x7d\x87\xeb\x74\x68\x5c\x4c\x30\xa4\xb0\xae\xbd\x89\xe9\x71\x5e\x0a\xdd\x14\x0f\xc9\xf8\x06\xf4\x46\x09\x79\x42\x68\x3f\x1e\xa0\x0d\x85\x69\x48\x08\xcf\x3d\xec\x97\x4f\x7b\xb0\xea\x5e\x00\x17\xd9\x8b\xb4\xf6\xed\x7a\x09\x99\x6e\xf8\x1a\x18\x99\x2e\x78\x78\x76\x4b\x6a\x75\x9d\x82\x3f\x7c\xf4\x2e\xc0\x5c\x70\xec\x8d\x8a\x77\xea\x9c\xae\x53\xad\xc6\xff\x8b\x7e\xab\xb9\x2e\x78\xb5\xe3\xfe\xb1\xbd\xa5\xce\xc9\x1f\x9d\xbf\x03\x00\x00\xff\xff\x3f\x64\x0b\x14\x31\x01\x00\x00")

func srcTemplatesArchivesHtmlBytes() ([]byte, error) {
	return bindataRead(
		_srcTemplatesArchivesHtml,
		"src/templates/archives.html",
	)
}

func srcTemplatesArchivesHtml() (*asset, error) {
	bytes, err := srcTemplatesArchivesHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "src/templates/archives.html", size: 305, mode: os.FileMode(420), modTime: time.Unix(1444410793, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _srcTemplatesArticleArticleHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x8c\x92\xbf\x6e\x83\x30\x10\xc6\x77\x9e\xc2\xb2\x32\xb6\xa0\xae\x15\x41\x8a\x92\x21\x43\x2b\x55\x0a\x7b\x75\x21\x07\x58\x32\x86\xda\xc7\x90\x52\xde\xbd\xb6\x09\x09\x24\x54\xea\x82\xc5\xfd\xf9\x7d\xdf\xf9\xdc\x75\x27\xcc\x85\x42\xc6\x49\x90\x44\xde\xf7\x41\xd7\x85\x1b\x4d\x22\x93\x18\xa6\x2e\xd6\xf7\xec\x87\xd9\xe0\x41\x10\x86\xdb\x5a\xe5\xa2\x18\x13\xb6\x16\xd5\xc9\x9e\xc1\x8d\x93\xd5\x8a\x50\x91\x23\xc5\xe5\x4b\xf2\x48\x8b\x23\x1b\x0e\x82\xb8\x49\x6c\x97\xc8\x59\xad\xd9\x8c\xbd\x69\xa9\xb4\xb1\x15\x5c\xda\x86\x7f\x87\x33\x0d\x28\x96\x49\x30\x66\xcd\x25\x1c\x51\x32\xff\x7d\xb6\xd2\xd0\x4a\xe2\xc9\xf1\xcc\x3c\xf2\xa1\xb7\xeb\x16\x42\x28\x0d\xfa\xd4\x82\xbc\xcf\xbb\xd1\xe2\xc8\xa9\x26\xc1\xe0\xf5\x3a\xcb\x0e\x08\xff\x65\xc9\xce\xbf\x6f\x2b\x50\xe2\x1b\x5d\x0f\x89\x0a\xef\x29\xa3\xc4\xe4\x32\xa7\x52\x5b\x5b\x54\xd4\xfa\xec\xe4\x60\x49\xcb\xb4\x59\x86\xc6\x70\x56\x6a\xcc\xd7\x3c\xca\x2e\x0d\xd1\xe4\xee\x6f\x90\xb0\xa4\x4a\xf2\x64\x31\x17\x47\xf0\xa7\x8d\x14\x0a\xe3\x37\xae\x41\x15\xc8\x56\x9f\x4f\x6c\x45\x50\xb0\xd7\xf5\x43\xcd\xb2\x4d\xa1\xf2\xfa\xea\xd1\x76\x5a\x7b\x0e\x30\x71\x34\xfc\xce\x4c\x8c\x67\x1c\x35\x7e\x07\x57\xa9\x7d\xfa\xfe\x36\xb9\xa3\xe1\xd1\xdd\x5c\x4f\x37\x7a\x28\x41\x63\x5a\x0a\xf3\xd1\x1e\xa5\x30\x25\x6a\x0f\x26\xac\x1a\x69\x47\x67\xdc\xb8\x02\xb2\x05\x9c\x85\xf3\x47\x7d\x8f\xda\x09\xf3\xd5\x1a\x17\x51\x50\xe1\x1d\xe6\xe4\x93\x73\xc6\x78\xfe\x06\x00\x00\xff\xff\xc6\xf5\x44\x02\x68\x03\x00\x00")

func srcTemplatesArticleArticleHtmlBytes() ([]byte, error) {
	return bindataRead(
		_srcTemplatesArticleArticleHtml,
		"src/templates/article/article.html",
	)
}

func srcTemplatesArticleArticleHtml() (*asset, error) {
	bytes, err := srcTemplatesArticleArticleHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "src/templates/article/article.html", size: 872, mode: os.FileMode(420), modTime: time.Unix(1450391509, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _srcTemplatesArticleDisqusHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x84\x53\x4f\x6f\x9c\x3e\x10\xbd\xef\xa7\x18\x71\x31\x28\x0a\xfe\xe9\x77\xcc\xb2\x54\xed\xa6\x87\xf6\xd0\x54\xda\xdc\xaa\x2a\x32\x78\x00\x67\x8d\xcd\xda\x66\xb7\x84\xec\x77\xef\xb0\x90\xa8\x7f\xd5\x13\x78\xe6\xcd\xcc\x9b\xe7\xe7\x71\x94\x58\x29\x83\x10\x49\xe5\x0f\xbd\x8f\xce\xe7\x55\xd6\xfc\x9f\x6f\x6d\xdb\xa2\x09\x3e\xe3\x74\x58\x65\x52\x1d\x41\xc9\xcd\x02\x7a\x08\x8d\x43\x21\xa3\x3c\xe3\x94\xa0\xb4\x2f\x9d\xea\x02\x84\xa1\xc3\x4d\x14\xf0\x5b\xe0\x8f\xe2\x28\xe6\x68\x94\xaf\x00\x8e\xc2\xc1\x52\xeb\x1b\xeb\x82\x11\x2d\xc2\x06\xd8\x38\xa6\x3b\x15\x30\xdd\x5a\x53\xa9\x3a\xbd\xbd\x40\xa6\xc8\x04\x38\x9f\xd9\x9a\x6a\x39\x87\xfb\xbb\xdb\x3b\x88\x45\x6d\xcd\x93\xd0\xf8\xe4\x6c\x72\x03\xc4\xb0\x13\x41\x15\x4a\xab\x30\xc0\x49\x85\x06\xda\x01\xac\x96\x50\x68\x5b\x83\x70\x41\x95\x1a\xfd\xdc\xe0\x03\x48\x6b\x58\x80\xbd\xb1\x27\x50\x15\xa8\x40\x15\x5a\xc3\xc9\xba\x3d\x54\xd6\x81\x0d\x0d\x3a\xe8\x3d\x3a\xff\x33\x5d\x25\x49\x06\x55\x29\xca\xce\x7c\xdf\xce\x8d\xd3\x9d\xee\xeb\x0b\x43\xc2\xc7\x55\x6f\xca\xa0\xac\x89\x13\x18\xe9\xbc\x74\xf0\x07\xaa\x91\xb6\xec\x27\x29\xd3\x92\x34\x0b\xf8\x5e\xe3\x74\x8a\xd9\xac\x0e\x4b\xd6\x13\x2e\x9d\xa4\x9b\x06\xfc\x22\x1e\x9b\xb3\xc2\x0f\xa6\xa4\x74\x70\x3d\xae\x2f\xfd\xa7\xa8\x77\x53\x8c\x71\xce\xe0\xea\x77\x75\xaf\x80\xa5\x73\x30\x2d\x6d\xcb\xb1\x2d\x50\xa6\x8f\x9e\xcd\xf5\xf1\x2b\xad\x1a\xc3\xc2\xc9\xbf\x1b\xee\x45\xfd\x89\x8a\x63\xd6\xd0\xfd\xb2\xe4\xcb\x7f\x5f\xe1\xf9\x19\xfe\x81\x2d\xac\x1c\x2e\xd8\x24\x15\x5d\x87\x46\x6e\x1b\xa5\x65\x4c\x14\x93\x69\xd8\x39\x89\xe9\x9b\xf1\x79\x23\x72\x8b\xb1\xcb\xef\x67\x8d\xc2\x23\xd0\x65\x17\x1a\xe1\x23\x6d\xbd\x5b\x8c\x64\xe1\xa8\xf0\x04\x74\x29\x90\x09\x20\xb7\x55\x9b\xa8\x09\xa1\xbb\xe1\xfc\x87\x9d\xde\x50\xfc\xe1\xa5\x5b\x94\x97\x8b\x67\xa1\xb3\x27\x74\x48\x46\x18\x60\x76\x54\x9a\x71\x41\x66\x7d\x1d\xbc\xfa\x7b\xd3\x08\x4a\x2d\xbc\x27\xab\xfb\xc3\x75\xe1\xb4\x32\xfb\x3f\x77\xce\x7c\x27\xcc\x0b\x98\x1c\x67\xaf\x97\x17\x94\xcf\x33\x69\x61\x02\xe4\xd3\xe4\xd5\x38\x92\x2a\xf4\xb2\xbe\x07\x00\x00\xff\xff\x43\x45\x7a\xc4\x6e\x03\x00\x00")

func srcTemplatesArticleDisqusHtmlBytes() ([]byte, error) {
	return bindataRead(
		_srcTemplatesArticleDisqusHtml,
		"src/templates/article/disqus.html",
	)
}

func srcTemplatesArticleDisqusHtml() (*asset, error) {
	bytes, err := srcTemplatesArticleDisqusHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "src/templates/article/disqus.html", size: 878, mode: os.FileMode(420), modTime: time.Unix(1444410793, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _srcTemplatesArticleSharethisHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x74\xd1\xb1\x0e\x82\x30\x10\xc6\xf1\x9d\xa7\x68\x58\x3a\x38\xf8\x02\xc0\xa6\xc6\xc4\x49\xd9\x49\xa1\x07\x5c\xa8\x2d\x69\xcf\xa0\x69\x78\x77\x81\x18\x1d\x6c\xe7\x7f\x7f\x5f\xd2\x9c\xf7\x12\x5a\xd4\xc0\x52\xd7\x0b\x0b\xd4\xa3\x4b\xe7\x39\xc9\x6a\x5b\x24\x99\x1b\x85\x66\x8d\x12\xce\xe5\xdc\x51\xf5\x7d\x51\x29\x61\x3b\xe0\x4c\xa2\x1b\x95\x78\x95\xf0\xa4\x9c\xdf\xd6\x5a\x2e\x95\x17\xd9\x7e\x95\xff\x03\xad\x68\xa0\x36\x66\x08\xfa\xe3\x27\xc6\x39\x4d\x48\x04\x36\xa8\xcb\x09\x80\xe2\x54\xa1\x1e\x40\xa2\x0e\xda\xcb\x16\xcf\x3a\xce\x3b\x63\x3a\x05\xa3\x7a\x84\xbf\x7e\xda\x32\xdb\xc5\x07\x2c\x48\x89\x14\xc4\xd7\x2d\xc5\x29\xdc\x05\xaa\xa0\x3c\xac\xe5\x07\xbd\x07\x2d\x97\xdb\xbd\x03\x00\x00\xff\xff\xb6\x22\x45\x39\xd3\x01\x00\x00")

func srcTemplatesArticleSharethisHtmlBytes() ([]byte, error) {
	return bindataRead(
		_srcTemplatesArticleSharethisHtml,
		"src/templates/article/sharethis.html",
	)
}

func srcTemplatesArticleSharethisHtml() (*asset, error) {
	bytes, err := srcTemplatesArticleSharethisHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "src/templates/article/sharethis.html", size: 467, mode: os.FileMode(420), modTime: time.Unix(1444410793, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _srcTemplatesAtomXml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x6c\x92\x4d\x4f\xc3\x20\x18\xc7\xef\xfd\x14\x84\xec\xa8\x30\x35\x26\x66\xa1\x5d\x16\x3d\x78\x98\x17\xb7\x9d\x0d\x59\x9f\x76\xc4\x16\x16\x4a\xad\xa6\xe1\xbb\x3b\xe8\xe8\x9b\xde\xc8\xf3\x7f\xe1\xf7\x10\xd8\xfa\xbb\x2c\xd0\x17\xe8\x4a\x28\x19\xe3\x3b\xb2\xc4\x08\xe4\x51\xa5\x42\xe6\x31\xae\x4d\x76\xfb\x84\xd7\x49\x14\xb1\x0c\x20\x45\x17\xaf\xac\x62\x7c\x32\xe6\xbc\xa2\xb4\x69\x1a\xd2\x3c\x10\xa5\x73\x7a\xbf\x5c\x3e\xd2\x8d\x51\x25\x4e\x22\x84\x98\x11\xa6\x80\xa4\x6d\xc9\x4e\x18\x20\xcf\x4a\x66\x22\x27\x7b\x37\xb4\x96\xd1\x4e\x75\xbe\x42\xc8\x4f\x74\xd2\x90\xc5\x78\x66\x3e\xbc\x6f\xad\xc5\x88\x7a\x5b\x7d\x4e\xb9\x81\xd4\x15\x1e\xba\xa3\xab\x09\xd3\xe8\x62\x69\x5b\x91\x21\xb2\xd1\x46\x1c\x0b\xa8\xac\xf5\x23\xcd\x65\x0e\x68\xf1\x71\x83\x16\xbc\x53\xd0\x2a\x9e\xb9\x18\x48\xa3\x7f\xdc\x2d\x23\xec\x60\xff\x07\x79\x0e\xbd\xf8\x4b\x3d\xca\xef\x8a\x3a\xef\xd7\xb8\x52\xf6\xe2\xcb\x85\xde\x33\x4c\x36\x9c\xc9\xa3\x35\xbb\x06\x90\x69\x08\x55\x75\x59\xf2\x00\xef\xb4\x3e\xfb\xba\x7f\xdb\x0e\x17\xed\x3a\x5f\x88\xd1\x49\x8e\xf1\xda\x9c\x94\x0e\x25\x4c\xf2\xd2\x3f\xc1\x64\xaf\x8d\xf7\x38\x1a\x2f\x5f\x7b\x86\x24\xa3\xfd\x33\x0e\x84\xe1\xc4\xa8\xfb\x3b\x49\xf4\x1b\x00\x00\xff\xff\x41\x57\x24\xb9\x6b\x02\x00\x00")

func srcTemplatesAtomXmlBytes() ([]byte, error) {
	return bindataRead(
		_srcTemplatesAtomXml,
		"src/templates/atom.xml",
	)
}

func srcTemplatesAtomXml() (*asset, error) {
	bytes, err := srcTemplatesAtomXmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "src/templates/atom.xml", size: 619, mode: os.FileMode(420), modTime: time.Unix(1444410793, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _srcTemplatesBaseAnalyticsHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x84\x92\x51\x8f\xd3\x30\x0c\xc7\xdf\xf9\x14\x56\x5f\xd2\x8a\x53\xca\xf3\xf5\x76\xe8\x0e\x10\xe2\xe5\x84\x04\x6f\xd3\x34\x99\xd4\xcd\xb2\x75\x49\x49\xdc\x41\xd5\xed\xbb\x93\xa6\x9d\x98\x10\xd2\x3d\xc5\xfe\xfb\x57\xdb\xff\xca\xe3\x58\x53\x63\x2c\x41\x86\x16\xdb\x81\x8d\x0a\xd9\xe5\xf2\x06\x60\x1c\x4d\x03\xf2\x9b\x61\x92\x1f\x9c\x6d\x8c\x96\x9f\x9d\xd3\x2d\x3d\x5d\xb1\x2f\x1f\x13\xf7\x10\x94\x37\x1d\x03\x0f\x1d\xad\x32\xa6\xdf\x5c\xee\xf1\x84\xb3\x9a\x3d\x46\x02\xe0\x84\x1e\xb6\x1a\x7f\xc2\x6a\x7e\xce\x67\x58\x6f\xaa\x54\x9a\x72\xd9\xf5\x61\x97\xaf\xc5\x36\x10\x3f\x29\xe5\x7a\xcb\xe2\x0e\xc4\x38\xbe\x36\x5e\x6c\x8a\xff\x74\x61\x8f\xea\xf0\x15\x35\x9d\x0c\xfd\x4a\x48\x62\xf2\xa6\xb7\x8a\x8d\xb3\x79\x01\x63\x52\xe6\xc5\x34\xc6\xb5\x6a\xa7\xfa\x23\x59\x96\xca\x13\x32\x7d\x6a\x69\xca\x72\x31\xdb\x10\x45\x15\x31\x39\x59\x8c\xac\xf8\xc7\xa4\x48\x45\x0c\x83\x55\xb1\xca\xbe\xa7\x6a\x69\x1f\xe5\xe0\x27\x31\x17\x3b\xe6\x2e\xdc\x0b\x58\xdd\xcc\x6a\x9d\xc2\x69\x21\xd9\x79\xc7\x4e\xb9\x16\xde\xc3\x02\x96\xa5\x80\xfb\x39\x99\xe2\x02\xde\x82\x08\x8c\x1c\xa4\x96\xb5\xeb\x7f\xb4\xa4\x5a\xa3\x0e\xd2\x12\x97\xb5\x92\xfb\x20\xaa\x1b\x4b\xe1\xd6\x91\x26\x5e\xec\x84\xe7\xe1\x3b\xea\x17\x3c\xd2\x5f\x63\xeb\x77\x9b\x0a\x82\xec\xd0\x47\xe0\xc5\xd5\x24\x8d\x0d\xe4\xf9\x99\x1a\xe7\x29\xd7\x78\x07\x61\xf9\xc9\x97\x22\x4f\xd1\x43\x39\x7f\xfc\x98\xae\x84\x6c\x1d\xef\xe0\xfa\xfe\x09\x00\x00\xff\xff\xea\xed\x60\x78\x4f\x02\x00\x00")

func srcTemplatesBaseAnalyticsHtmlBytes() ([]byte, error) {
	return bindataRead(
		_srcTemplatesBaseAnalyticsHtml,
		"src/templates/base/analytics.html",
	)
}

func srcTemplatesBaseAnalyticsHtml() (*asset, error) {
	bytes, err := srcTemplatesBaseAnalyticsHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "src/templates/base/analytics.html", size: 591, mode: os.FileMode(420), modTime: time.Unix(1444410793, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _srcTemplatesBaseBaseHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xd4\x57\x5b\x6f\xe4\x34\x14\x7e\xdf\x5f\x61\x4c\x1f\xb6\xa2\x49\xb6\x48\x48\xab\xee\x24\x52\x77\xd8\x15\x48\xc0\x56\xea\x20\xc1\x13\xf2\x24\x9e\xc4\x8b\x13\x07\xdb\x99\xe9\x28\x9a\xff\xce\xb1\x63\xe7\x36\x69\x69\x85\x16\x89\xa7\xc4\xe7\x7e\xf9\xce\x89\xd3\xb6\x19\xdd\xb1\x8a\x22\xbc\x25\x8a\xe2\xd3\xe9\xd5\xea\xab\xef\x3f\xad\x37\xbf\xdf\x7d\x40\x85\x2e\x79\xf2\x6a\xd5\x3d\x10\x5a\x15\x94\x64\xe6\x05\x5e\x4b\xaa\x09\x4a\x0b\x22\x15\xd5\x31\x6e\xf4\x2e\x78\x8b\xc7\xac\x42\xeb\x3a\xa0\x7f\x35\x6c\x1f\xe3\xdf\x82\x5f\x6f\x83\xb5\x28\x6b\xa2\xd9\x96\x53\x8c\x52\x51\x69\x5a\x81\xde\x8f\x1f\x62\x9a\xe5\x74\xa2\x59\x91\x92\xc6\x78\xcf\xe8\xa1\x16\x52\x8f\x84\x0f\x2c\xd3\x45\x9c\xd1\x3d\x4b\x69\x60\x0f\x57\x88\x55\x4c\x33\xc2\x03\x95\x12\x4e\xe3\xeb\xf0\x0d\x98\xea\x6c\x69\xa6\x39\x4d\xda\x56\xd3\xb2\xe6\x44\x43\x7e\x96\x82\x51\x78\x3a\xad\xa2\x8e\xeb\x44\x39\xab\xfe\x44\x85\xa4\xbb\x18\x47\x3b\x4a\x33\x15\x11\xce\x43\xa2\x45\x19\x3e\x94\x1c\x23\x7d\xac\x21\x22\x52\xd7\x9c\xa5\x90\x82\xa8\x22\xc3\xfb\xc6\xf2\x24\xe5\xc0\xe2\x9a\xca\x0a\x9c\x80\xac\x31\x1c\xe3\x7b\xa6\x29\x84\x48\xd1\xed\xe6\xd3\xcf\xe8\x23\x18\x75\x39\xb6\x2d\xdb\xa1\xd0\xb0\xc3\xb5\xa8\x76\x2c\x0f\x3f\x12\x48\x48\x54\x50\xf8\x21\x18\x6b\x55\x15\x90\x7f\xda\x68\x64\xd8\xd8\x05\xd8\xb6\xcb\xca\x18\x45\xde\x01\xad\x32\x30\xe6\x0e\x43\xfa\xa6\x79\x54\xda\xfc\x5f\x3d\x12\xca\x3d\xf4\x93\x6e\x0a\xa6\xee\x9a\x2d\x67\xaa\xa0\xd2\x47\xa5\x52\xc9\x6a\xed\x2a\xa1\xe9\x83\x8e\x3e\x93\x3d\xe9\xa8\x38\xd9\x13\x89\xd4\x81\xe9\xb4\xd8\x88\xef\x1e\x62\x2d\x1b\xfa\x6e\x15\x75\xdc\xe4\x19\x06\x90\x92\x29\xd4\x3e\x3a\x84\xca\x44\xa0\x21\x82\x30\x15\x65\xb4\x6d\xb4\x86\x6a\x77\x0f\x15\x7e\x56\x38\x79\x89\xd9\x4e\x06\x21\xa5\x7f\x62\x79\xa1\x43\x51\x9b\xe6\xa9\xd7\x6d\xed\xd3\xbb\x41\xf3\x82\x2e\x95\x00\x5f\xa1\x4c\xfc\x22\xf4\x0f\x44\x15\x37\x68\x47\xb8\xa2\x8e\xb2\x16\xf5\xb1\xa7\x14\xc0\xbe\xcd\x32\x49\x95\x7a\x4f\xa4\x23\x9f\x2e\xdf\x75\x91\x4e\xe2\xf6\x4d\x32\xf4\x6e\xa8\xcc\xeb\x56\x64\x47\x97\x57\xc6\xf6\x28\xe5\x44\xa9\x18\x57\x64\xbf\x85\xfa\x76\x8f\x00\x86\x95\x34\x5c\xfb\xa3\xd2\x00\xc8\x34\xd0\xa2\x06\x28\x0a\x83\x3c\x60\xb0\xdc\xa2\xb4\xcf\x7f\x6c\xcd\x4c\x13\x81\x71\x97\x3d\x77\xc9\x5b\xe0\xc0\x32\xc8\x98\xf0\x6c\x1b\x5c\xad\xbb\x03\x9e\xa9\x69\x91\xe7\x66\xc6\x32\xa2\x89\x3b\x18\x97\x9c\x93\x5a\xf5\x64\x22\x73\xb3\x33\x42\xa7\xd3\xb3\xc7\xce\x4c\x6b\x6b\x52\x79\xf3\x4a\x06\xa2\xe2\x47\x9c\x6c\xac\x4d\x34\x24\x09\x75\x05\xb9\x27\x54\xcd\x78\x04\xe0\xc7\x42\xe7\x3f\x11\x5d\x39\xc0\x4e\x68\x64\x56\xa9\xad\x24\x55\xe6\x87\x3a\xc2\xc9\x0c\x86\x1b\xb3\x46\xcc\xa2\x22\xa3\x36\x45\xd0\xa7\xe1\x68\xc7\x57\x48\x37\xc1\x77\x24\xa7\x0a\xbd\x06\xa3\x8e\xb0\x21\xb9\x9a\x4f\xb7\x38\x18\xea\xe5\x58\x6c\x0d\xbb\x21\x17\x92\xd1\x05\xe1\x81\x37\x51\xb9\x95\x00\x39\xbe\xa4\x70\x2b\xd3\x82\xed\xe9\xa5\xdb\x1a\x8f\x60\xcb\x37\x1c\x2d\x76\xfe\x1f\xd2\x7a\x91\x73\x70\xdf\xf0\x91\x77\x3f\x35\xf0\x98\xa1\x6d\x69\x17\xf6\x26\x27\x16\xed\x8a\x4e\xa0\x9f\xae\x75\xa4\x93\x51\xa1\xf9\x4a\xe2\xc4\xa9\x28\xd3\xb9\x55\x04\x92\x33\x37\x7e\xee\xc7\x34\x80\x42\x4e\xd1\xc5\x1f\x57\xe8\xa2\x86\x7c\xd1\x4d\x3c\xce\xfe\x29\xef\x6d\x6b\x35\xc2\x7b\xde\xe4\xb0\xa7\x12\x7f\x1e\xc1\xe7\x39\x41\xac\xa2\x86\x4f\x7b\x80\x40\x04\x4d\x64\x7c\x5f\xfe\x1d\x76\x9e\x40\xe5\xf3\xfa\xe6\x5f\xa5\xd9\xe8\x4b\x4d\x7c\x69\x78\xe7\xe5\xf5\x8e\x33\x29\xea\x4c\x1c\xaa\xf9\x62\xf2\xc5\xff\x7a\xb6\xe7\x06\xf9\x91\xe7\xd5\xb6\xdf\xbc\xe6\xcb\x66\xf6\xc5\x36\x99\x8c\xf5\x2c\x5d\x6f\x25\x28\x69\xd5\xcc\x5c\xcf\xc0\x92\x76\x6e\x8e\x03\x60\x1e\x4d\xcb\x68\x5e\x10\x3f\x3b\x20\x7f\xd1\x4f\xd2\xfb\xe3\xda\xdb\xe9\x2d\x9e\x69\xaf\xe6\x20\x1a\xd5\x21\xf2\x5a\x11\xf8\x18\x2c\xb8\x81\x98\xd0\xa6\x4b\x74\x4b\xe0\xee\x87\xea\x86\x73\xdf\xce\xb6\xe5\xb4\x42\x7d\xa0\x06\xc1\x76\xbb\x9e\x15\xcc\x60\xf6\x3c\xa4\xa5\xf1\x9a\x63\x7b\x49\x73\x79\x2c\x27\x60\x7a\x1c\xb8\x5f\x02\x40\xd6\xdb\x97\x84\x8e\x26\xf9\x80\x9a\x85\x2c\x9e\xc4\x0b\xc8\x5b\x0b\x2f\x43\x09\x28\x18\x80\x58\xbd\x01\x1b\xf6\xf8\xbf\x81\xc5\xf9\xa2\x9c\x4a\x9c\x7d\xa2\xc7\xec\x11\xd3\xbd\x9e\xdd\xf5\xfa\xdb\x99\xf9\x36\x06\x65\x16\x5c\xbf\xf1\x6f\x62\xb7\x83\x5f\xad\xe0\xda\x9e\x79\x1e\xbc\xf5\x2f\x8e\xf1\x6d\xdf\xf0\xf1\xa5\xdf\xfd\x3c\x75\xb7\xfe\x59\x10\x63\xb9\x9d\x10\xda\xff\x1c\xcc\x79\xa4\x22\xfc\x08\x95\x57\x9e\x0d\x38\xb4\x37\x55\xb8\xbb\xda\x3f\x43\x9f\xe6\xdf\x01\x00\x00\xff\xff\x5b\x40\x77\x1c\x4b\x0e\x00\x00")

func srcTemplatesBaseBaseHtmlBytes() ([]byte, error) {
	return bindataRead(
		_srcTemplatesBaseBaseHtml,
		"src/templates/base/base.html",
	)
}

func srcTemplatesBaseBaseHtml() (*asset, error) {
	bytes, err := srcTemplatesBaseBaseHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "src/templates/base/base.html", size: 3659, mode: os.FileMode(420), modTime: time.Unix(1444410793, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _srcTemplatesBaseFooterHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x74\x92\xdd\x8e\xa3\x30\x0c\x85\xef\xf7\x29\xac\x5c\x56\x82\x94\xbd\x5a\xad\x28\xda\x87\xd8\x17\x08\x60\x20\x28\x24\xd9\xd8\xdd\xfe\xa0\xbe\xfb\x18\x5a\xa6\x33\x53\xcd\x0d\x3a\x8e\xc3\xe7\x73\xc0\xf3\xdc\x62\x67\x3d\x82\xea\x42\x60\x4c\xea\x76\xfb\x01\x30\xcf\x7a\x07\x7f\x07\x4b\x40\x43\x38\xba\x16\x6a\x04\x8a\xce\x32\x04\x0f\x1e\x4f\x90\xd0\xa1\x21\x24\xd8\xe9\xf5\x85\xb2\xb5\xff\xa1\x71\x86\xe8\xa0\x9a\xe0\xd9\x08\x32\x41\x13\x5c\x36\xb5\x59\xb1\xdf\x54\xe8\x3a\x42\xce\x8a\xb5\x76\x7d\xf6\x6b\x13\x8f\xc6\x4f\x55\x09\xec\x33\x8e\xf1\xcc\x59\x83\x7e\x31\x77\xef\x4a\x3f\x6e\x4a\xb4\x81\x21\x61\x77\x50\x03\x73\xfc\xad\x75\x6f\x79\x38\xd6\x79\x13\x26\x6d\xfa\xe0\xaf\xc6\xe1\x35\x05\x1d\x83\x0b\xaa\x5a\x9e\xa5\x36\x15\x48\xb4\xc9\xb4\x08\x27\xb9\xfd\x44\x51\x34\x7e\x9b\xdb\xbb\x4b\x1c\xac\x84\x81\x77\x95\x0d\x68\x12\xab\xaa\xd4\xcb\xc5\x0a\xea\xcb\xb7\x2e\x58\xc0\xe2\xf8\xab\x0d\x55\xfd\xf9\x50\x2d\x4e\xb6\x44\xfa\x11\xa9\xd4\x92\x7d\x91\x4f\x41\x4d\xb2\x91\x81\x52\x73\xc7\x93\xf0\xcd\x68\xce\x79\x1f\x42\x2f\xff\x21\x5a\xba\xcf\x91\x33\xed\x6c\x4d\x7a\xfc\x77\xc4\x74\xd1\x45\x5e\x14\xf9\xfe\x51\xe5\x93\xf5\xf9\x48\xab\xfb\x15\xf8\xc2\x96\x6f\x87\x5c\xcb\x1a\x10\x27\x13\x57\x64\x6b\x89\xf5\x48\xfa\x79\xfa\x4a\x99\x67\xf4\xad\x6c\xc1\x5b\x00\x00\x00\xff\xff\xa9\xef\x18\x09\x4b\x02\x00\x00")

func srcTemplatesBaseFooterHtmlBytes() ([]byte, error) {
	return bindataRead(
		_srcTemplatesBaseFooterHtml,
		"src/templates/base/footer.html",
	)
}

func srcTemplatesBaseFooterHtml() (*asset, error) {
	bytes, err := srcTemplatesBaseFooterHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "src/templates/base/footer.html", size: 587, mode: os.FileMode(420), modTime: time.Unix(1444410793, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _srcTemplatesBaseHeaderHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xb4\xcf\x31\x0e\x02\x21\x10\x85\xe1\xde\x53\x90\xe9\x05\x93\x6d\x5d\xef\x82\xcc\xdb\x40\x84\xc1\x30\xd3\x18\xb2\x77\x77\x2b\xf5\x02\xb6\x7f\x5e\xf2\xe5\xcd\xc9\xd8\x8a\xc0\x51\x46\x64\x0c\xda\xf7\x93\x73\xd7\x5a\xe4\xe1\x06\xea\x4a\x6a\xaf\x0a\xcd\x80\x91\xcb\x03\xdb\x4a\x21\x08\x8c\x25\xfa\x7b\xef\xa6\x36\xe2\x33\xb1\xf8\xd4\x5b\xf8\x84\xb0\xf8\x8b\x5f\x42\x52\xfd\x36\xdf\xca\xb1\x52\xa5\xdb\x9f\x80\xb3\x65\x34\xfc\x30\x73\x42\xf8\xf8\xf3\x0e\x00\x00\xff\xff\x6a\x24\xeb\x71\xe4\x00\x00\x00")

func srcTemplatesBaseHeaderHtmlBytes() ([]byte, error) {
	return bindataRead(
		_srcTemplatesBaseHeaderHtml,
		"src/templates/base/header.html",
	)
}

func srcTemplatesBaseHeaderHtml() (*asset, error) {
	bytes, err := srcTemplatesBaseHeaderHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "src/templates/base/header.html", size: 228, mode: os.FileMode(420), modTime: time.Unix(1444410793, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _srcTemplatesCategoryHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x54\x8e\x41\xab\xc3\x20\x10\x84\xef\xfe\x8a\x45\x72\x7c\x28\xef\xfa\xd8\x08\x8f\xfc\x84\xf4\x5e\x24\xd9\x18\x41\x0c\xd8\xcd\xa1\x58\xff\x7b\x4d\xd2\xd0\xf6\xa4\x33\xcc\x7e\x33\x39\x8f\x34\xf9\x48\x20\xd9\x73\x20\x59\x8a\xc8\x59\x75\x96\xc9\x2d\xe9\x5e\x0a\x3c\xa0\xea\xde\x33\xa9\x6e\x89\x93\x77\xea\xb2\xe5\xf6\x18\xc5\xb1\xbe\xe2\x8d\x18\x96\xc8\x14\x79\x83\xe0\xfc\x6b\xbe\x40\xa8\xab\x23\x70\x0d\x46\x40\x45\x26\x1b\x1d\x41\x73\xfd\x81\xc6\x26\xf6\x43\x20\xf8\x6b\x41\xfd\x1f\xff\x5b\x25\x00\x60\xf0\x06\x2d\xcc\x89\xa6\x56\xe6\x7c\x06\x55\x1f\x56\x57\x8a\x34\x1f\xd6\x6b\x14\x6a\x6b\x50\xd7\xb3\xbd\xe3\xd8\x87\x7a\xeb\x3c\xd5\x33\x00\x00\xff\xff\x03\x42\x6c\xbd\xf0\x00\x00\x00")

func srcTemplatesCategoryHtmlBytes() ([]byte, error) {
	return bindataRead(
		_srcTemplatesCategoryHtml,
		"src/templates/category.html",
	)
}

func srcTemplatesCategoryHtml() (*asset, error) {
	bytes, err := srcTemplatesCategoryHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "src/templates/category.html", size: 240, mode: os.FileMode(420), modTime: time.Unix(1444410793, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _srcTemplatesIndexHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x9c\x55\x4f\x6f\xa3\x3e\x10\xbd\xf3\x29\x5c\x7e\xd1\xef\x50\x6d\x41\xbd\xee\x12\xa4\xaa\x7b\xe8\xa1\x9b\xad\xd4\xdc\x2b\x07\x06\xb0\x64\x4c\x62\x9b\xa8\x59\x94\xef\xbe\xe3\x3f\x04\x9c\xa5\xda\x6a\x23\x25\x86\x19\xcf\xbc\x37\x33\xcf\xce\x30\x94\x50\x31\x01\x24\xd6\x4c\x73\x88\xcf\xe7\x68\x18\x92\x57\xa6\x21\x79\xec\x44\xc5\xea\x64\x6b\xec\xd6\x0c\xa2\xc4\x35\x9a\x42\x8a\x4e\x68\x10\xda\x05\xb1\x8a\x24\x0f\x52\xb3\x82\x83\x72\xdb\x24\x15\x35\x90\xd5\xdb\x17\xb2\xa2\xce\x41\xbe\xae\x83\x4d\x99\xb7\xe7\x51\xd6\xdc\xe7\x19\x25\x8d\x84\x6a\x1d\x0f\xc3\x18\x90\xbc\xf2\xbe\x3e\x9f\xe3\x7c\x66\xf2\x84\xb2\x94\xe6\x59\x8a\x61\x51\x94\xed\x73\x47\xa0\x93\x64\x15\x90\x7f\xe8\x75\x63\x8c\x63\xac\x7b\x37\xc8\x6a\x4f\x05\x29\x38\x55\x6a\x1d\x73\xba\x03\x4e\xec\xef\x1d\xd6\x46\x7b\xae\xe3\x7c\x77\x22\x36\xe7\x1f\xb1\x33\x2a\x93\x09\xb8\x02\xeb\x5a\x80\xb7\x7e\xd3\xbb\x2c\x35\xa8\xf9\xbc\x95\x73\x80\xef\x54\xc3\xa7\xa8\x19\x98\xa7\xbe\xa5\x82\xfd\x02\x13\xa4\x59\x0b\xd7\x69\xfe\x82\xf5\x88\x9b\xea\x4e\x9e\xec\x10\x96\xc0\x54\x5f\x14\xa0\x54\xec\x47\x92\x16\x3e\x20\x9d\x95\x3f\x25\x49\x1a\xdd\xf2\x60\x4a\x93\xcf\x0c\xea\x23\x1a\x5b\x5a\x2b\xab\x9e\x99\x56\x34\xad\x8d\x4e\xae\xf7\x2c\xd3\x64\xa2\xea\x2e\x1c\x31\xd2\xd0\xc3\x65\xce\xc8\xbe\x06\x24\xc6\x35\x4b\x51\x38\xd1\x8c\xf4\xd3\xf6\xc7\xf3\xac\x47\x4e\xde\x66\xe3\x7e\xc4\xd6\xf0\xae\xef\x24\xab\x1b\x1c\xc3\xc4\x68\xa7\x05\xc1\xef\x65\x42\x1f\xe9\xf8\xbf\x92\xa9\x43\xaf\xde\x34\xfa\x69\x19\xe7\xcf\x40\x8f\x40\x30\x4d\xd7\xb6\x88\x74\xe3\x34\x8d\xa4\xf0\x61\x3a\x19\x32\x68\x9f\x53\x9a\x3d\x30\x9b\x4e\x37\x4c\xd4\x44\x77\x44\x01\x90\x06\x24\xdc\xb8\x23\x71\x1d\x84\x3d\xaf\x35\x71\xda\xdc\xf4\xed\x0e\xe4\xcf\xea\x85\xd6\xa0\xc8\xbd\xc9\x55\xb2\x63\x50\x60\x81\x64\x40\x62\x85\x3d\x1f\xed\x7b\x5a\x33\x41\x35\xeb\x44\x8c\x3d\x23\xf8\xc9\x38\x1b\x9d\xf6\xdd\xa2\xc0\x01\x4f\xa0\xc9\xec\x50\x6c\x7a\xe3\xc4\xc2\xe9\x8e\x43\xe9\x77\x3a\x62\xe6\x19\xb3\xd9\x64\xb3\xb3\x9f\xbc\x48\x38\xb2\xae\x57\xa6\x69\x41\x3a\x73\x13\xfc\xcf\xe9\xa1\xef\xbe\xd9\x81\xda\xc8\x94\x33\xcf\x28\x90\x11\x12\x1e\xef\x1b\x49\x4f\xbe\x5c\x0f\x6a\xa8\x5f\xe8\xda\x8d\x21\x8a\x2f\x8b\x16\x9a\x1d\x21\xf6\x74\xaf\x88\xa6\x4c\x94\xf0\x6e\xb3\xe0\x5d\xe8\xb2\xdc\xdb\x2b\xc0\x3c\x5e\xce\xbc\xd7\xa1\x8d\x35\x0c\xbd\xd7\x53\x0f\x6a\x98\xb5\x06\xd7\xf4\x96\xb8\x6a\x6e\x53\x33\xc3\x4f\x77\x7c\xb5\x30\xe5\x7f\x19\xc2\x06\x85\xb0\x3c\x00\xb9\x38\x80\x2c\xed\x39\x8a\x17\xa5\x74\x51\x9e\xab\x02\x39\xda\x12\x02\xa3\xff\xeb\x70\x9e\xdf\x01\x00\x00\xff\xff\x15\x8b\x41\x60\x85\x06\x00\x00")

func srcTemplatesIndexHtmlBytes() ([]byte, error) {
	return bindataRead(
		_srcTemplatesIndexHtml,
		"src/templates/index.html",
	)
}

func srcTemplatesIndexHtml() (*asset, error) {
	bytes, err := srcTemplatesIndexHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "src/templates/index.html", size: 1669, mode: os.FileMode(420), modTime: time.Unix(1444410793, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _srcTemplatesPageHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xaa\xae\x4e\x49\x4d\xcb\xcc\x4b\x55\x50\x2a\xc9\x2c\xc9\x49\x55\xaa\xad\xe5\xaa\xae\xd6\x0b\x48\x4c\x4f\xd5\x0b\x01\x09\xd4\xd6\x2a\xd4\x28\x00\x45\x82\x33\x4b\x52\xf5\x9c\xf3\xf3\xd2\x32\xd3\x61\x12\x40\x85\xa9\x79\x29\x40\x9a\x0b\x61\x48\x72\x7e\x5e\x49\x6a\x5e\x09\xc8\x18\x9b\x0c\x43\x3b\x34\xa3\x6c\xf4\x81\x62\x70\xf3\x3d\x42\x7c\x7d\x14\x20\x4c\x67\x88\x36\x24\x33\x01\x01\x00\x00\xff\xff\x27\x7a\x43\x12\x98\x00\x00\x00")

func srcTemplatesPageHtmlBytes() ([]byte, error) {
	return bindataRead(
		_srcTemplatesPageHtml,
		"src/templates/page.html",
	)
}

func srcTemplatesPageHtml() (*asset, error) {
	bytes, err := srcTemplatesPageHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "src/templates/page.html", size: 152, mode: os.FileMode(420), modTime: time.Unix(1444410793, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _srcTemplatesTagHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x4c\x8e\xc1\x0a\x83\x30\x10\x44\xef\xf9\x8a\x25\x78\x2c\x09\xbd\x96\x35\x50\xfa\x09\x7a\x2f\x41\x57\x0d\x84\x08\x36\x9e\xb6\xf9\xf7\xae\x5a\x69\x4f\xd9\x09\xf3\x66\x86\xb9\xa7\x21\x24\x02\x9d\x43\x8e\xa4\x4b\x51\xcc\xa6\xf5\x63\x29\xf0\x06\x39\x9b\x90\xc9\x3c\xe6\x34\x84\xd1\xb4\x9b\x65\x77\x50\xea\xe5\x55\x3f\xba\x9b\x53\xa6\x94\x37\x1e\xa7\xab\x3b\x33\xd0\x8a\x50\xb8\x46\xa7\x40\xd2\x16\x9f\x46\x82\xea\x79\x81\xca\x2f\x39\x74\x91\xe0\x56\x83\xb9\x1f\xf7\x4b\x60\x00\x8c\xc1\xa1\x87\x69\xa1\xa1\xd6\xcc\xa7\xd1\x34\x71\x95\x40\xed\xfe\xbe\xbe\x7b\xd0\x7a\x87\x56\xb0\xbd\xe3\x98\x86\x76\xeb\x3c\xd5\x27\x00\x00\xff\xff\xd0\xa4\x2a\x22\xe6\x00\x00\x00")

func srcTemplatesTagHtmlBytes() ([]byte, error) {
	return bindataRead(
		_srcTemplatesTagHtml,
		"src/templates/tag.html",
	)
}

func srcTemplatesTagHtml() (*asset, error) {
	bytes, err := srcTemplatesTagHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "src/templates/tag.html", size: 230, mode: os.FileMode(420), modTime: time.Unix(1444410793, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _srcTemplatesTemplatesArchivesHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x4c\x8f\xb1\x4e\xc4\x30\x0c\x86\xf7\x3e\x85\x15\x75\x84\x54\xac\x28\x8d\x74\x82\x81\xfd\xd8\x51\xd4\xb8\xad\xa5\x5c\x2a\xa5\x3e\x86\x33\x79\x77\x5c\xca\x15\xa6\xc8\xbf\xbe\xcf\xce\x2f\x12\x71\xa4\x8c\x60\x98\x38\xa1\xa9\xb5\x39\x95\x61\xa6\x4f\x5c\xe1\x0b\x44\xec\x99\x18\xed\xcb\x92\x47\x9a\xec\xfb\x86\x28\x21\x82\x39\xea\xdb\xfc\xd9\xc3\x92\x19\x33\x6f\xbe\x9b\x9f\xfc\x7d\x87\xeb\x74\x68\x5c\x4c\x30\xa4\xb0\xae\xbd\x89\xe9\x71\x5e\x0a\xdd\x14\x0f\xc9\xf8\x06\xf4\x46\x09\x79\x42\x68\x3f\x1e\xa0\x0d\x85\x69\x48\x08\xcf\x3d\xec\x97\x4f\x7b\xb0\xea\x5e\x00\x17\xd9\x8b\xb4\xf6\xed\x7a\x09\x99\x6e\xf8\x1a\x18\x99\x2e\x78\x78\x76\x4b\x6a\x75\x9d\x82\x3f\x7c\xf4\x2e\xc0\x5c\x70\xec\x8d\x8a\x77\xea\x9c\xae\x53\xad\xc6\xff\x8b\x7e\xab\xb9\x2e\x78\xb5\xe3\xfe\xb1\xbd\xa5\xce\xc9\x1f\x9d\xbf\x03\x00\x00\xff\xff\x3f\x64\x0b\x14\x31\x01\x00\x00")

func srcTemplatesTemplatesArchivesHtmlBytes() ([]byte, error) {
	return bindataRead(
		_srcTemplatesTemplatesArchivesHtml,
		"src/templates/templates/archives.html",
	)
}

func srcTemplatesTemplatesArchivesHtml() (*asset, error) {
	bytes, err := srcTemplatesTemplatesArchivesHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "src/templates/templates/archives.html", size: 305, mode: os.FileMode(420), modTime: time.Unix(1450391726, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _srcTemplatesTemplatesArticleArticleHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x8c\x92\x41\x6f\xa3\x30\x10\x85\xef\xfc\x0a\xcb\xca\x71\x17\xb4\xd7\x15\x41\x8a\x92\x43\x0e\xbb\x52\xa5\x70\xaf\x26\x64\xc0\x96\x8c\x49\xed\xe1\x90\x52\xfe\x7b\xc7\xa4\x34\x40\x52\xb5\x97\x58\x19\xcf\xfb\xde\xc3\x33\x5d\x77\xc2\x52\x5b\x14\x92\x34\x19\x94\x7d\x1f\x75\x5d\xbc\x71\xa4\x0b\x83\x71\x1e\x6a\x7d\x2f\xde\x04\x17\x0f\x9a\x30\xde\x36\xb6\xd4\xd5\x78\xc1\xbd\x68\x4f\x7c\x46\x37\x4e\xd1\x58\x42\x4b\x81\x94\xaa\x3f\xd9\x3d\x2d\x4d\xb8\x1c\x45\xe9\x39\x63\x95\x2e\xc5\x0c\xbc\x69\x49\x35\x4e\x04\xb1\x3f\x83\x15\x85\x01\xef\xd7\xd2\xc0\x11\x8d\x18\x7e\x7f\xb3\x11\xb4\x86\x64\x76\xbc\x2c\x63\x5d\xd5\xc1\x22\x88\xb3\x69\xbc\x60\x34\x06\xd9\x01\xe1\x8f\x1c\x18\xbf\x6f\x6b\xb0\xfa\x15\x83\x86\x74\x8d\x4b\xca\x37\x56\x5b\x6e\xaa\x1a\x77\x09\x76\xf0\xc8\xcb\xb7\x45\x81\xde\x4b\xa1\x1c\x96\x6b\x99\x14\x1f\x82\x64\xf2\x70\x37\x48\xac\xa8\x36\x32\x7b\x78\x97\x26\xf0\x65\x8c\x1c\x2a\x3f\x8c\xcb\x81\xad\x50\xac\x9e\x7f\x89\x15\x41\x25\xfe\xae\xef\x7a\x1e\xc7\xd4\xb6\x6c\x3e\x33\xb2\x92\xe3\x05\xc0\x24\xd1\xf5\xef\x2c\xc4\x78\xa6\x09\xcf\x7a\xba\x57\xfb\xfc\xff\xbf\xc9\x1b\x5d\x37\xe6\x96\x7a\x3a\xd2\x83\x02\x87\xb9\xd2\xfe\xa9\x3d\x1a\xed\x15\xba\x01\x4c\x58\x9f\x0d\x7f\xba\x90\x3e\x34\x10\x37\x48\x11\xcf\x37\x72\x89\xda\x69\xff\xd2\xfa\x50\xb1\x50\xe3\x02\x73\x1a\x2e\xe7\x8c\xf1\x7c\x0f\x00\x00\xff\xff\x48\x15\x1f\x37\x25\x03\x00\x00")

func srcTemplatesTemplatesArticleArticleHtmlBytes() ([]byte, error) {
	return bindataRead(
		_srcTemplatesTemplatesArticleArticleHtml,
		"src/templates/templates/article/article.html",
	)
}

func srcTemplatesTemplatesArticleArticleHtml() (*asset, error) {
	bytes, err := srcTemplatesTemplatesArticleArticleHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "src/templates/templates/article/article.html", size: 805, mode: os.FileMode(420), modTime: time.Unix(1450391726, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _srcTemplatesTemplatesArticleDisqusHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x84\x53\x4f\x6f\x9c\x3e\x10\xbd\xef\xa7\x18\x71\x31\x28\x0a\xfe\xe9\x77\xcc\xb2\x54\xed\xa6\x87\xf6\xd0\x54\xda\xdc\xaa\x2a\x32\x78\x00\x67\x8d\xcd\xda\x66\xb7\x84\xec\x77\xef\xb0\x90\xa8\x7f\xd5\x13\x78\xe6\xcd\xcc\x9b\xe7\xe7\x71\x94\x58\x29\x83\x10\x49\xe5\x0f\xbd\x8f\xce\xe7\x55\xd6\xfc\x9f\x6f\x6d\xdb\xa2\x09\x3e\xe3\x74\x58\x65\x52\x1d\x41\xc9\xcd\x02\x7a\x08\x8d\x43\x21\xa3\x3c\xe3\x94\xa0\xb4\x2f\x9d\xea\x02\x84\xa1\xc3\x4d\x14\xf0\x5b\xe0\x8f\xe2\x28\xe6\x68\x94\xaf\x00\x8e\xc2\xc1\x52\xeb\x1b\xeb\x82\x11\x2d\xc2\x06\xd8\x38\xa6\x3b\x15\x30\xdd\x5a\x53\xa9\x3a\xbd\xbd\x40\xa6\xc8\x04\x38\x9f\xd9\x9a\x6a\x39\x87\xfb\xbb\xdb\x3b\x88\x45\x6d\xcd\x93\xd0\xf8\xe4\x6c\x72\x03\xc4\xb0\x13\x41\x15\x4a\xab\x30\xc0\x49\x85\x06\xda\x01\xac\x96\x50\x68\x5b\x83\x70\x41\x95\x1a\xfd\xdc\xe0\x03\x48\x6b\x58\x80\xbd\xb1\x27\x50\x15\xa8\x40\x15\x5a\xc3\xc9\xba\x3d\x54\xd6\x81\x0d\x0d\x3a\xe8\x3d\x3a\xff\x33\x5d\x25\x49\x06\x55\x29\xca\xce\x7c\xdf\xce\x8d\xd3\x9d\xee\xeb\x0b\x43\xc2\xc7\x55\x6f\xca\xa0\xac\x89\x13\x18\xe9\xbc\x74\xf0\x07\xaa\x91\xb6\xec\x27\x29\xd3\x92\x34\x0b\xf8\x5e\xe3\x74\x8a\xd9\xac\x0e\x4b\xd6\x13\x2e\x9d\xa4\x9b\x06\xfc\x22\x1e\x9b\xb3\xc2\x0f\xa6\xa4\x74\x70\x3d\xae\x2f\xfd\xa7\xa8\x77\x53\x8c\x71\xce\xe0\xea\x77\x75\xaf\x80\xa5\x73\x30\x2d\x6d\xcb\xb1\x2d\x50\xa6\x8f\x9e\xcd\xf5\xf1\x2b\xad\x1a\xc3\xc2\xc9\xbf\x1b\xee\x45\xfd\x89\x8a\x63\xd6\xd0\xfd\xb2\xe4\xcb\x7f\x5f\xe1\xf9\x19\xfe\x81\x2d\xac\x1c\x2e\xd8\x24\x15\x5d\x87\x46\x6e\x1b\xa5\x65\x4c\x14\x93\x69\xd8\x39\x89\xe9\x9b\xf1\x79\x23\x72\x8b\xb1\xcb\xef\x67\x8d\xc2\x23\xd0\x65\x17\x1a\xe1\x23\x6d\xbd\x5b\x8c\x64\xe1\xa8\xf0\x04\x74\x29\x90\x09\x20\xb7\x55\x9b\xa8\x09\xa1\xbb\xe1\xfc\x87\x9d\xde\x50\xfc\xe1\xa5\x5b\x94\x97\x8b\x67\xa1\xb3\x27\x74\x48\x46\x18\x60\x76\x54\x9a\x71\x41\x66\x7d\x1d\xbc\xfa\x7b\xd3\x08\x4a\x2d\xbc\x27\xab\xfb\xc3\x75\xe1\xb4\x32\xfb\x3f\x77\xce\x7c\x27\xcc\x0b\x98\x1c\x67\xaf\x97\x17\x94\xcf\x33\x69\x61\x02\xe4\xd3\xe4\xd5\x38\x92\x2a\xf4\xb2\xbe\x07\x00\x00\xff\xff\x43\x45\x7a\xc4\x6e\x03\x00\x00")

func srcTemplatesTemplatesArticleDisqusHtmlBytes() ([]byte, error) {
	return bindataRead(
		_srcTemplatesTemplatesArticleDisqusHtml,
		"src/templates/templates/article/disqus.html",
	)
}

func srcTemplatesTemplatesArticleDisqusHtml() (*asset, error) {
	bytes, err := srcTemplatesTemplatesArticleDisqusHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "src/templates/templates/article/disqus.html", size: 878, mode: os.FileMode(420), modTime: time.Unix(1450391726, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _srcTemplatesTemplatesArticleSharethisHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x74\xd1\xb1\x0e\x82\x30\x10\xc6\xf1\x9d\xa7\x68\x58\x3a\x38\xf8\x02\xc0\xa6\xc6\xc4\x49\xd9\x49\xa1\x07\x5c\xa8\x2d\x69\xcf\xa0\x69\x78\x77\x81\x18\x1d\x6c\xe7\x7f\x7f\x5f\xd2\x9c\xf7\x12\x5a\xd4\xc0\x52\xd7\x0b\x0b\xd4\xa3\x4b\xe7\x39\xc9\x6a\x5b\x24\x99\x1b\x85\x66\x8d\x12\xce\xe5\xdc\x51\xf5\x7d\x51\x29\x61\x3b\xe0\x4c\xa2\x1b\x95\x78\x95\xf0\xa4\x9c\xdf\xd6\x5a\x2e\x95\x17\xd9\x7e\x95\xff\x03\xad\x68\xa0\x36\x66\x08\xfa\xe3\x27\xc6\x39\x4d\x48\x04\x36\xa8\xcb\x09\x80\xe2\x54\xa1\x1e\x40\xa2\x0e\xda\xcb\x16\xcf\x3a\xce\x3b\x63\x3a\x05\xa3\x7a\x84\xbf\x7e\xda\x32\xdb\xc5\x07\x2c\x48\x89\x14\xc4\xd7\x2d\xc5\x29\xdc\x05\xaa\xa0\x3c\xac\xe5\x07\xbd\x07\x2d\x97\xdb\xbd\x03\x00\x00\xff\xff\xb6\x22\x45\x39\xd3\x01\x00\x00")

func srcTemplatesTemplatesArticleSharethisHtmlBytes() ([]byte, error) {
	return bindataRead(
		_srcTemplatesTemplatesArticleSharethisHtml,
		"src/templates/templates/article/sharethis.html",
	)
}

func srcTemplatesTemplatesArticleSharethisHtml() (*asset, error) {
	bytes, err := srcTemplatesTemplatesArticleSharethisHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "src/templates/templates/article/sharethis.html", size: 467, mode: os.FileMode(420), modTime: time.Unix(1450391726, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _srcTemplatesTemplatesAtomXml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x6c\x92\x4d\x4f\xc3\x20\x18\xc7\xef\xfd\x14\x84\xec\xa8\x30\x35\x26\x66\xa1\x5d\x16\x3d\x78\x98\x17\xb7\x9d\x0d\x59\x9f\x76\xc4\x16\x16\x4a\xad\xa6\xe1\xbb\x3b\xe8\xe8\x9b\xde\xc8\xf3\x7f\xe1\xf7\x10\xd8\xfa\xbb\x2c\xd0\x17\xe8\x4a\x28\x19\xe3\x3b\xb2\xc4\x08\xe4\x51\xa5\x42\xe6\x31\xae\x4d\x76\xfb\x84\xd7\x49\x14\xb1\x0c\x20\x45\x17\xaf\xac\x62\x7c\x32\xe6\xbc\xa2\xb4\x69\x1a\xd2\x3c\x10\xa5\x73\x7a\xbf\x5c\x3e\xd2\x8d\x51\x25\x4e\x22\x84\x98\x11\xa6\x80\xa4\x6d\xc9\x4e\x18\x20\xcf\x4a\x66\x22\x27\x7b\x37\xb4\x96\xd1\x4e\x75\xbe\x42\xc8\x4f\x74\xd2\x90\xc5\x78\x66\x3e\xbc\x6f\xad\xc5\x88\x7a\x5b\x7d\x4e\xb9\x81\xd4\x15\x1e\xba\xa3\xab\x09\xd3\xe8\x62\x69\x5b\x91\x21\xb2\xd1\x46\x1c\x0b\xa8\xac\xf5\x23\xcd\x65\x0e\x68\xf1\x71\x83\x16\xbc\x53\xd0\x2a\x9e\xb9\x18\x48\xa3\x7f\xdc\x2d\x23\xec\x60\xff\x07\x79\x0e\xbd\xf8\x4b\x3d\xca\xef\x8a\x3a\xef\xd7\xb8\x52\xf6\xe2\xcb\x85\xde\x33\x4c\x36\x9c\xc9\xa3\x35\xbb\x06\x90\x69\x08\x55\x75\x59\xf2\x00\xef\xb4\x3e\xfb\xba\x7f\xdb\x0e\x17\xed\x3a\x5f\x88\xd1\x49\x8e\xf1\xda\x9c\x94\x0e\x25\x4c\xf2\xd2\x3f\xc1\x64\xaf\x8d\xf7\x38\x1a\x2f\x5f\x7b\x86\x24\xa3\xfd\x33\x0e\x84\xe1\xc4\xa8\xfb\x3b\x49\xf4\x1b\x00\x00\xff\xff\x41\x57\x24\xb9\x6b\x02\x00\x00")

func srcTemplatesTemplatesAtomXmlBytes() ([]byte, error) {
	return bindataRead(
		_srcTemplatesTemplatesAtomXml,
		"src/templates/templates/atom.xml",
	)
}

func srcTemplatesTemplatesAtomXml() (*asset, error) {
	bytes, err := srcTemplatesTemplatesAtomXmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "src/templates/templates/atom.xml", size: 619, mode: os.FileMode(420), modTime: time.Unix(1450391726, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _srcTemplatesTemplatesBaseAnalyticsHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x84\x92\x51\x8f\xd3\x30\x0c\xc7\xdf\xf9\x14\x56\x5f\xd2\x8a\x53\xca\xf3\xf5\x76\xe8\x0e\x10\xe2\xe5\x84\x04\x6f\xd3\x34\x99\xd4\xcd\xb2\x75\x49\x49\xdc\x41\xd5\xed\xbb\x93\xa6\x9d\x98\x10\xd2\x3d\xc5\xfe\xfb\x57\xdb\xff\xca\xe3\x58\x53\x63\x2c\x41\x86\x16\xdb\x81\x8d\x0a\xd9\xe5\xf2\x06\x60\x1c\x4d\x03\xf2\x9b\x61\x92\x1f\x9c\x6d\x8c\x96\x9f\x9d\xd3\x2d\x3d\x5d\xb1\x2f\x1f\x13\xf7\x10\x94\x37\x1d\x03\x0f\x1d\xad\x32\xa6\xdf\x5c\xee\xf1\x84\xb3\x9a\x3d\x46\x02\xe0\x84\x1e\xb6\x1a\x7f\xc2\x6a\x7e\xce\x67\x58\x6f\xaa\x54\x9a\x72\xd9\xf5\x61\x97\xaf\xc5\x36\x10\x3f\x29\xe5\x7a\xcb\xe2\x0e\xc4\x38\xbe\x36\x5e\x6c\x8a\xff\x74\x61\x8f\xea\xf0\x15\x35\x9d\x0c\xfd\x4a\x48\x62\xf2\xa6\xb7\x8a\x8d\xb3\x79\x01\x63\x52\xe6\xc5\x34\xc6\xb5\x6a\xa7\xfa\x23\x59\x96\xca\x13\x32\x7d\x6a\x69\xca\x72\x31\xdb\x10\x45\x15\x31\x39\x59\x8c\xac\xf8\xc7\xa4\x48\x45\x0c\x83\x55\xb1\xca\xbe\xa7\x6a\x69\x1f\xe5\xe0\x27\x31\x17\x3b\xe6\x2e\xdc\x0b\x58\xdd\xcc\x6a\x9d\xc2\x69\x21\xd9\x79\xc7\x4e\xb9\x16\xde\xc3\x02\x96\xa5\x80\xfb\x39\x99\xe2\x02\xde\x82\x08\x8c\x1c\xa4\x96\xb5\xeb\x7f\xb4\xa4\x5a\xa3\x0e\xd2\x12\x97\xb5\x92\xfb\x20\xaa\x1b\x4b\xe1\xd6\x91\x26\x5e\xec\x84\xe7\xe1\x3b\xea\x17\x3c\xd2\x5f\x63\xeb\x77\x9b\x0a\x82\xec\xd0\x47\xe0\xc5\xd5\x24\x8d\x0d\xe4\xf9\x99\x1a\xe7\x29\xd7\x78\x07\x61\xf9\xc9\x97\x22\x4f\xd1\x43\x39\x7f\xfc\x98\xae\x84\x6c\x1d\xef\xe0\xfa\xfe\x09\x00\x00\xff\xff\xea\xed\x60\x78\x4f\x02\x00\x00")

func srcTemplatesTemplatesBaseAnalyticsHtmlBytes() ([]byte, error) {
	return bindataRead(
		_srcTemplatesTemplatesBaseAnalyticsHtml,
		"src/templates/templates/base/analytics.html",
	)
}

func srcTemplatesTemplatesBaseAnalyticsHtml() (*asset, error) {
	bytes, err := srcTemplatesTemplatesBaseAnalyticsHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "src/templates/templates/base/analytics.html", size: 591, mode: os.FileMode(420), modTime: time.Unix(1450391726, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _srcTemplatesTemplatesBaseBaseHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xd4\x57\x5b\x6f\xe4\x34\x14\x7e\xdf\x5f\x61\x4c\x1f\xb6\xa2\x49\xb6\x48\x48\xab\xee\x24\x52\x77\xd8\x15\x48\xc0\x56\xea\x20\xc1\x13\xf2\x24\x9e\xc4\x8b\x13\x07\xdb\x99\xe9\x28\x9a\xff\xce\xb1\x63\xe7\x36\x69\x69\x85\x16\x89\xa7\xc4\xe7\x7e\xf9\xce\x89\xd3\xb6\x19\xdd\xb1\x8a\x22\xbc\x25\x8a\xe2\xd3\xe9\xd5\xea\xab\xef\x3f\xad\x37\xbf\xdf\x7d\x40\x85\x2e\x79\xf2\x6a\xd5\x3d\x10\x5a\x15\x94\x64\xe6\x05\x5e\x4b\xaa\x09\x4a\x0b\x22\x15\xd5\x31\x6e\xf4\x2e\x78\x8b\xc7\xac\x42\xeb\x3a\xa0\x7f\x35\x6c\x1f\xe3\xdf\x82\x5f\x6f\x83\xb5\x28\x6b\xa2\xd9\x96\x53\x8c\x52\x51\x69\x5a\x81\xde\x8f\x1f\x62\x9a\xe5\x74\xa2\x59\x91\x92\xc6\x78\xcf\xe8\xa1\x16\x52\x8f\x84\x0f\x2c\xd3\x45\x9c\xd1\x3d\x4b\x69\x60\x0f\x57\x88\x55\x4c\x33\xc2\x03\x95\x12\x4e\xe3\xeb\xf0\x0d\x98\xea\x6c\x69\xa6\x39\x4d\xda\x56\xd3\xb2\xe6\x44\x43\x7e\x96\x82\x51\x78\x3a\xad\xa2\x8e\xeb\x44\x39\xab\xfe\x44\x85\xa4\xbb\x18\x47\x3b\x4a\x33\x15\x11\xce\x43\xa2\x45\x19\x3e\x94\x1c\x23\x7d\xac\x21\x22\x52\xd7\x9c\xa5\x90\x82\xa8\x22\xc3\xfb\xc6\xf2\x24\xe5\xc0\xe2\x9a\xca\x0a\x9c\x80\xac\x31\x1c\xe3\x7b\xa6\x29\x84\x48\xd1\xed\xe6\xd3\xcf\xe8\x23\x18\x75\x39\xb6\x2d\xdb\xa1\xd0\xb0\xc3\xb5\xa8\x76\x2c\x0f\x3f\x12\x48\x48\x54\x50\xf8\x21\x18\x6b\x55\x15\x90\x7f\xda\x68\x64\xd8\xd8\x05\xd8\xb6\xcb\xca\x18\x45\xde\x01\xad\x32\x30\xe6\x0e\x43\xfa\xa6\x79\x54\xda\xfc\x5f\x3d\x12\xca\x3d\xf4\x93\x6e\x0a\xa6\xee\x9a\x2d\x67\xaa\xa0\xd2\x47\xa5\x52\xc9\x6a\xed\x2a\xa1\xe9\x83\x8e\x3e\x93\x3d\xe9\xa8\x38\xd9\x13\x89\xd4\x81\xe9\xb4\xd8\x88\xef\x1e\x62\x2d\x1b\xfa\x6e\x15\x75\xdc\xe4\x19\x06\x90\x92\x29\xd4\x3e\x3a\x84\xca\x44\xa0\x21\x82\x30\x15\x65\xb4\x6d\xb4\x86\x6a\x77\x0f\x15\x7e\x56\x38\x79\x89\xd9\x4e\x06\x21\xa5\x7f\x62\x79\xa1\x43\x51\x9b\xe6\xa9\xd7\x6d\xed\xd3\xbb\x41\xf3\x82\x2e\x95\x00\x5f\xa1\x4c\xfc\x22\xf4\x0f\x44\x15\x37\x68\x47\xb8\xa2\x8e\xb2\x16\xf5\xb1\xa7\x14\xc0\xbe\xcd\x32\x49\x95\x7a\x4f\xa4\x23\x9f\x2e\xdf\x75\x91\x4e\xe2\xf6\x4d\x32\xf4\x6e\xa8\xcc\xeb\x56\x64\x47\x97\x57\xc6\xf6\x28\xe5\x44\xa9\x18\x57\x64\xbf\x85\xfa\x76\x8f\x00\x86\x95\x34\x5c\xfb\xa3\xd2\x00\xc8\x34\xd0\xa2\x06\x28\x0a\x83\x3c\x60\xb0\xdc\xa2\xb4\xcf\x7f\x6c\xcd\x4c\x13\x81\x71\x97\x3d\x77\xc9\x5b\xe0\xc0\x32\xc8\x98\xf0\x6c\x1b\x5c\xad\xbb\x03\x9e\xa9\x69\x91\xe7\x66\xc6\x32\xa2\x89\x3b\x18\x97\x9c\x93\x5a\xf5\x64\x22\x73\xb3\x33\x42\xa7\xd3\xb3\xc7\xce\x4c\x6b\x6b\x52\x79\xf3\x4a\x06\xa2\xe2\x47\x9c\x6c\xac\x4d\x34\x24\x09\x75\x05\xb9\x27\x54\xcd\x78\x04\xe0\xc7\x42\xe7\x3f\x11\x5d\x39\xc0\x4e\x68\x64\x56\xa9\xad\x24\x55\xe6\x87\x3a\xc2\xc9\x0c\x86\x1b\xb3\x46\xcc\xa2\x22\xa3\x36\x45\xd0\xa7\xe1\x68\xc7\x57\x48\x37\xc1\x77\x24\xa7\x0a\xbd\x06\xa3\x8e\xb0\x21\xb9\x9a\x4f\xb7\x38\x18\xea\xe5\x58\x6c\x0d\xbb\x21\x17\x92\xd1\x05\xe1\x81\x37\x51\xb9\x95\x00\x39\xbe\xa4\x70\x2b\xd3\x82\xed\xe9\xa5\xdb\x1a\x8f\x60\xcb\x37\x1c\x2d\x76\xfe\x1f\xd2\x7a\x91\x73\x70\xdf\xf0\x91\x77\x3f\x35\xf0\x98\xa1\x6d\x69\x17\xf6\x26\x27\x16\xed\x8a\x4e\xa0\x9f\xae\x75\xa4\x93\x51\xa1\xf9\x4a\xe2\xc4\xa9\x28\xd3\xb9\x55\x04\x92\x33\x37\x7e\xee\xc7\x34\x80\x42\x4e\xd1\xc5\x1f\x57\xe8\xa2\x86\x7c\xd1\x4d\x3c\xce\xfe\x29\xef\x6d\x6b\x35\xc2\x7b\xde\xe4\xb0\xa7\x12\x7f\x1e\xc1\xe7\x39\x41\xac\xa2\x86\x4f\x7b\x80\x40\x04\x4d\x64\x7c\x5f\xfe\x1d\x76\x9e\x40\xe5\xf3\xfa\xe6\x5f\xa5\xd9\xe8\x4b\x4d\x7c\x69\x78\xe7\xe5\xf5\x8e\x33\x29\xea\x4c\x1c\xaa\xf9\x62\xf2\xc5\xff\x7a\xb6\xe7\x06\xf9\x91\xe7\xd5\xb6\xdf\xbc\xe6\xcb\x66\xf6\xc5\x36\x99\x8c\xf5\x2c\x5d\x6f\x25\x28\x69\xd5\xcc\x5c\xcf\xc0\x92\x76\x6e\x8e\x03\x60\x1e\x4d\xcb\x68\x5e\x10\x3f\x3b\x20\x7f\xd1\x4f\xd2\xfb\xe3\xda\xdb\xe9\x2d\x9e\x69\xaf\xe6\x20\x1a\xd5\x21\xf2\x5a\x11\xf8\x18\x2c\xb8\x81\x98\xd0\xa6\x4b\x74\x4b\xe0\xee\x87\xea\x86\x73\xdf\xce\xb6\xe5\xb4\x42\x7d\xa0\x06\xc1\x76\xbb\x9e\x15\xcc\x60\xf6\x3c\xa4\xa5\xf1\x9a\x63\x7b\x49\x73\x79\x2c\x27\x60\x7a\x1c\xb8\x5f\x02\x40\xd6\xdb\x97\x84\x8e\x26\xf9\x80\x9a\x85\x2c\x9e\xc4\x0b\xc8\x5b\x0b\x2f\x43\x09\x28\x18\x80\x58\xbd\x01\x1b\xf6\xf8\xbf\x81\xc5\xf9\xa2\x9c\x4a\x9c\x7d\xa2\xc7\xec\x11\xd3\xbd\x9e\xdd\xf5\xfa\xdb\x99\xf9\x36\x06\x65\x16\x5c\xbf\xf1\x6f\x62\xb7\x83\x5f\xad\xe0\xda\x9e\x79\x1e\xbc\xf5\x2f\x8e\xf1\x6d\xdf\xf0\xf1\xa5\xdf\xfd\x3c\x75\xb7\xfe\x59\x10\x63\xb9\x9d\x10\xda\xff\x1c\xcc\x79\xa4\x22\xfc\x08\x95\x57\x9e\x0d\x38\xb4\x37\x55\xb8\xbb\xda\x3f\x43\x9f\xe6\xdf\x01\x00\x00\xff\xff\x5b\x40\x77\x1c\x4b\x0e\x00\x00")

func srcTemplatesTemplatesBaseBaseHtmlBytes() ([]byte, error) {
	return bindataRead(
		_srcTemplatesTemplatesBaseBaseHtml,
		"src/templates/templates/base/base.html",
	)
}

func srcTemplatesTemplatesBaseBaseHtml() (*asset, error) {
	bytes, err := srcTemplatesTemplatesBaseBaseHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "src/templates/templates/base/base.html", size: 3659, mode: os.FileMode(420), modTime: time.Unix(1450391726, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _srcTemplatesTemplatesBaseFooterHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x74\x92\xdd\x8e\xa3\x30\x0c\x85\xef\xf7\x29\xac\x5c\x56\x82\x94\xbd\x5a\xad\x28\xda\x87\xd8\x17\x08\x60\x20\x28\x24\xd9\xd8\xdd\xfe\xa0\xbe\xfb\x18\x5a\xa6\x33\x53\xcd\x0d\x3a\x8e\xc3\xe7\x73\xc0\xf3\xdc\x62\x67\x3d\x82\xea\x42\x60\x4c\xea\x76\xfb\x01\x30\xcf\x7a\x07\x7f\x07\x4b\x40\x43\x38\xba\x16\x6a\x04\x8a\xce\x32\x04\x0f\x1e\x4f\x90\xd0\xa1\x21\x24\xd8\xe9\xf5\x85\xb2\xb5\xff\xa1\x71\x86\xe8\xa0\x9a\xe0\xd9\x08\x32\x41\x13\x5c\x36\xb5\x59\xb1\xdf\x54\xe8\x3a\x42\xce\x8a\xb5\x76\x7d\xf6\x6b\x13\x8f\xc6\x4f\x55\x09\xec\x33\x8e\xf1\xcc\x59\x83\x7e\x31\x77\xef\x4a\x3f\x6e\x4a\xb4\x81\x21\x61\x77\x50\x03\x73\xfc\xad\x75\x6f\x79\x38\xd6\x79\x13\x26\x6d\xfa\xe0\xaf\xc6\xe1\x35\x05\x1d\x83\x0b\xaa\x5a\x9e\xa5\x36\x15\x48\xb4\xc9\xb4\x08\x27\xb9\xfd\x44\x51\x34\x7e\x9b\xdb\xbb\x4b\x1c\xac\x84\x81\x77\x95\x0d\x68\x12\xab\xaa\xd4\xcb\xc5\x0a\xea\xcb\xb7\x2e\x58\xc0\xe2\xf8\xab\x0d\x55\xfd\xf9\x50\x2d\x4e\xb6\x44\xfa\x11\xa9\xd4\x92\x7d\x91\x4f\x41\x4d\xb2\x91\x81\x52\x73\xc7\x93\xf0\xcd\x68\xce\x79\x1f\x42\x2f\xff\x21\x5a\xba\xcf\x91\x33\xed\x6c\x4d\x7a\xfc\x77\xc4\x74\xd1\x45\x5e\x14\xf9\xfe\x51\xe5\x93\xf5\xf9\x48\xab\xfb\x15\xf8\xc2\x96\x6f\x87\x5c\xcb\x1a\x10\x27\x13\x57\x64\x6b\x89\xf5\x48\xfa\x79\xfa\x4a\x99\x67\xf4\xad\x6c\xc1\x5b\x00\x00\x00\xff\xff\xa9\xef\x18\x09\x4b\x02\x00\x00")

func srcTemplatesTemplatesBaseFooterHtmlBytes() ([]byte, error) {
	return bindataRead(
		_srcTemplatesTemplatesBaseFooterHtml,
		"src/templates/templates/base/footer.html",
	)
}

func srcTemplatesTemplatesBaseFooterHtml() (*asset, error) {
	bytes, err := srcTemplatesTemplatesBaseFooterHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "src/templates/templates/base/footer.html", size: 587, mode: os.FileMode(420), modTime: time.Unix(1450391726, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _srcTemplatesTemplatesBaseHeaderHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xb4\xcf\x31\x0e\x02\x21\x10\x85\xe1\xde\x53\x90\xe9\x05\x93\x6d\x5d\xef\x82\xcc\xdb\x40\x84\xc1\x30\xd3\x18\xb2\x77\x77\x2b\xf5\x02\xb6\x7f\x5e\xf2\xe5\xcd\xc9\xd8\x8a\xc0\x51\x46\x64\x0c\xda\xf7\x93\x73\xd7\x5a\xe4\xe1\x06\xea\x4a\x6a\xaf\x0a\xcd\x80\x91\xcb\x03\xdb\x4a\x21\x08\x8c\x25\xfa\x7b\xef\xa6\x36\xe2\x33\xb1\xf8\xd4\x5b\xf8\x84\xb0\xf8\x8b\x5f\x42\x52\xfd\x36\xdf\xca\xb1\x52\xa5\xdb\x9f\x80\xb3\x65\x34\xfc\x30\x73\x42\xf8\xf8\xf3\x0e\x00\x00\xff\xff\x6a\x24\xeb\x71\xe4\x00\x00\x00")

func srcTemplatesTemplatesBaseHeaderHtmlBytes() ([]byte, error) {
	return bindataRead(
		_srcTemplatesTemplatesBaseHeaderHtml,
		"src/templates/templates/base/header.html",
	)
}

func srcTemplatesTemplatesBaseHeaderHtml() (*asset, error) {
	bytes, err := srcTemplatesTemplatesBaseHeaderHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "src/templates/templates/base/header.html", size: 228, mode: os.FileMode(420), modTime: time.Unix(1450391726, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _srcTemplatesTemplatesCategoryHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x54\x8e\x41\xab\xc3\x20\x10\x84\xef\xfe\x8a\x45\x72\x7c\x28\xef\xfa\xd8\x08\x8f\xfc\x84\xf4\x5e\x24\xd9\x18\x41\x0c\xd8\xcd\xa1\x58\xff\x7b\x4d\xd2\xd0\xf6\xa4\x33\xcc\x7e\x33\x39\x8f\x34\xf9\x48\x20\xd9\x73\x20\x59\x8a\xc8\x59\x75\x96\xc9\x2d\xe9\x5e\x0a\x3c\xa0\xea\xde\x33\xa9\x6e\x89\x93\x77\xea\xb2\xe5\xf6\x18\xc5\xb1\xbe\xe2\x8d\x18\x96\xc8\x14\x79\x83\xe0\xfc\x6b\xbe\x40\xa8\xab\x23\x70\x0d\x46\x40\x45\x26\x1b\x1d\x41\x73\xfd\x81\xc6\x26\xf6\x43\x20\xf8\x6b\x41\xfd\x1f\xff\x5b\x25\x00\x60\xf0\x06\x2d\xcc\x89\xa6\x56\xe6\x7c\x06\x55\x1f\x56\x57\x8a\x34\x1f\xd6\x6b\x14\x6a\x6b\x50\xd7\xb3\xbd\xe3\xd8\x87\x7a\xeb\x3c\xd5\x33\x00\x00\xff\xff\x03\x42\x6c\xbd\xf0\x00\x00\x00")

func srcTemplatesTemplatesCategoryHtmlBytes() ([]byte, error) {
	return bindataRead(
		_srcTemplatesTemplatesCategoryHtml,
		"src/templates/templates/category.html",
	)
}

func srcTemplatesTemplatesCategoryHtml() (*asset, error) {
	bytes, err := srcTemplatesTemplatesCategoryHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "src/templates/templates/category.html", size: 240, mode: os.FileMode(420), modTime: time.Unix(1450391726, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _srcTemplatesTemplatesIndexHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x9c\x55\x4f\x6f\xa3\x3e\x10\xbd\xf3\x29\x5c\x7e\xd1\xef\x50\x6d\x41\xbd\xee\x12\xa4\xaa\x7b\xe8\xa1\x9b\xad\xd4\xdc\x2b\x07\x06\xb0\x64\x4c\x62\x9b\xa8\x59\x94\xef\xbe\xe3\x3f\x04\x9c\xa5\xda\x6a\x23\x25\x86\x19\xcf\xbc\x37\x33\xcf\xce\x30\x94\x50\x31\x01\x24\xd6\x4c\x73\x88\xcf\xe7\x68\x18\x92\x57\xa6\x21\x79\xec\x44\xc5\xea\x64\x6b\xec\xd6\x0c\xa2\xc4\x35\x9a\x42\x8a\x4e\x68\x10\xda\x05\xb1\x8a\x24\x0f\x52\xb3\x82\x83\x72\xdb\x24\x15\x35\x90\xd5\xdb\x17\xb2\xa2\xce\x41\xbe\xae\x83\x4d\x99\xb7\xe7\x51\xd6\xdc\xe7\x19\x25\x8d\x84\x6a\x1d\x0f\xc3\x18\x90\xbc\xf2\xbe\x3e\x9f\xe3\x7c\x66\xf2\x84\xb2\x94\xe6\x59\x8a\x61\x51\x94\xed\x73\x47\xa0\x93\x64\x15\x90\x7f\xe8\x75\x63\x8c\x63\xac\x7b\x37\xc8\x6a\x4f\x05\x29\x38\x55\x6a\x1d\x73\xba\x03\x4e\xec\xef\x1d\xd6\x46\x7b\xae\xe3\x7c\x77\x22\x36\xe7\x1f\xb1\x33\x2a\x93\x09\xb8\x02\xeb\x5a\x80\xb7\x7e\xd3\xbb\x2c\x35\xa8\xf9\xbc\x95\x73\x80\xef\x54\xc3\xa7\xa8\x19\x98\xa7\xbe\xa5\x82\xfd\x02\x13\xa4\x59\x0b\xd7\x69\xfe\x82\xf5\x88\x9b\xea\x4e\x9e\xec\x10\x96\xc0\x54\x5f\x14\xa0\x54\xec\x47\x92\x16\x3e\x20\x9d\x95\x3f\x25\x49\x1a\xdd\xf2\x60\x4a\x93\xcf\x0c\xea\x23\x1a\x5b\x5a\x2b\xab\x9e\x99\x56\x34\xad\x8d\x4e\xae\xf7\x2c\xd3\x64\xa2\xea\x2e\x1c\x31\xd2\xd0\xc3\x65\xce\xc8\xbe\x06\x24\xc6\x35\x4b\x51\x38\xd1\x8c\xf4\xd3\xf6\xc7\xf3\xac\x47\x4e\xde\x66\xe3\x7e\xc4\xd6\xf0\xae\xef\x24\xab\x1b\x1c\xc3\xc4\x68\xa7\x05\xc1\xef\x65\x42\x1f\xe9\xf8\xbf\x92\xa9\x43\xaf\xde\x34\xfa\x69\x19\xe7\xcf\x40\x8f\x40\x30\x4d\xd7\xb6\x88\x74\xe3\x34\x8d\xa4\xf0\x61\x3a\x19\x32\x68\x9f\x53\x9a\x3d\x30\x9b\x4e\x37\x4c\xd4\x44\x77\x44\x01\x90\x06\x24\xdc\xb8\x23\x71\x1d\x84\x3d\xaf\x35\x71\xda\xdc\xf4\xed\x0e\xe4\xcf\xea\x85\xd6\xa0\xc8\xbd\xc9\x55\xb2\x63\x50\x60\x81\x64\x40\x62\x85\x3d\x1f\xed\x7b\x5a\x33\x41\x35\xeb\x44\x8c\x3d\x23\xf8\xc9\x38\x1b\x9d\xf6\xdd\xa2\xc0\x01\x4f\xa0\xc9\xec\x50\x6c\x7a\xe3\xc4\xc2\xe9\x8e\x43\xe9\x77\x3a\x62\xe6\x19\xb3\xd9\x64\xb3\xb3\x9f\xbc\x48\x38\xb2\xae\x57\xa6\x69\x41\x3a\x73\x13\xfc\xcf\xe9\xa1\xef\xbe\xd9\x81\xda\xc8\x94\x33\xcf\x28\x90\x11\x12\x1e\xef\x1b\x49\x4f\xbe\x5c\x0f\x6a\xa8\x5f\xe8\xda\x8d\x21\x8a\x2f\x8b\x16\x9a\x1d\x21\xf6\x74\xaf\x88\xa6\x4c\x94\xf0\x6e\xb3\xe0\x5d\xe8\xb2\xdc\xdb\x2b\xc0\x3c\x5e\xce\xbc\xd7\xa1\x8d\x35\x0c\xbd\xd7\x53\x0f\x6a\x98\xb5\x06\xd7\xf4\x96\xb8\x6a\x6e\x53\x33\xc3\x4f\x77\x7c\xb5\x30\xe5\x7f\x19\xc2\x06\x85\xb0\x3c\x00\xb9\x38\x80\x2c\xed\x39\x8a\x17\xa5\x74\x51\x9e\xab\x02\x39\xda\x12\x02\xa3\xff\xeb\x70\x9e\xdf\x01\x00\x00\xff\xff\x15\x8b\x41\x60\x85\x06\x00\x00")

func srcTemplatesTemplatesIndexHtmlBytes() ([]byte, error) {
	return bindataRead(
		_srcTemplatesTemplatesIndexHtml,
		"src/templates/templates/index.html",
	)
}

func srcTemplatesTemplatesIndexHtml() (*asset, error) {
	bytes, err := srcTemplatesTemplatesIndexHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "src/templates/templates/index.html", size: 1669, mode: os.FileMode(420), modTime: time.Unix(1450391726, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _srcTemplatesTemplatesPageHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xaa\xae\x4e\x49\x4d\xcb\xcc\x4b\x55\x50\x2a\xc9\x2c\xc9\x49\x55\xaa\xad\xe5\xaa\xae\xd6\x0b\x48\x4c\x4f\xd5\x0b\x01\x09\xd4\xd6\x2a\xd4\x28\x00\x45\x82\x33\x4b\x52\xf5\x9c\xf3\xf3\xd2\x32\xd3\x61\x12\x40\x85\xa9\x79\x29\x40\x9a\x0b\x61\x48\x72\x7e\x5e\x49\x6a\x5e\x09\xc8\x18\x9b\x0c\x43\x3b\x34\xa3\x6c\xf4\x81\x62\x70\xf3\x3d\x42\x7c\x7d\x14\x20\x4c\x67\x88\x36\x24\x33\x01\x01\x00\x00\xff\xff\x27\x7a\x43\x12\x98\x00\x00\x00")

func srcTemplatesTemplatesPageHtmlBytes() ([]byte, error) {
	return bindataRead(
		_srcTemplatesTemplatesPageHtml,
		"src/templates/templates/page.html",
	)
}

func srcTemplatesTemplatesPageHtml() (*asset, error) {
	bytes, err := srcTemplatesTemplatesPageHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "src/templates/templates/page.html", size: 152, mode: os.FileMode(420), modTime: time.Unix(1450391726, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _srcTemplatesTemplatesTagHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x4c\x8e\xc1\x0a\x83\x30\x10\x44\xef\xf9\x8a\x25\x78\x2c\x09\xbd\x96\x35\x50\xfa\x09\x7a\x2f\x41\x57\x0d\x84\x08\x36\x9e\xb6\xf9\xf7\xae\x5a\x69\x4f\xd9\x09\xf3\x66\x86\xb9\xa7\x21\x24\x02\x9d\x43\x8e\xa4\x4b\x51\xcc\xa6\xf5\x63\x29\xf0\x06\x39\x9b\x90\xc9\x3c\xe6\x34\x84\xd1\xb4\x9b\x65\x77\x50\xea\xe5\x55\x3f\xba\x9b\x53\xa6\x94\x37\x1e\xa7\xab\x3b\x33\xd0\x8a\x50\xb8\x46\xa7\x40\xd2\x16\x9f\x46\x82\xea\x79\x81\xca\x2f\x39\x74\x91\xe0\x56\x83\xb9\x1f\xf7\x4b\x60\x00\x8c\xc1\xa1\x87\x69\xa1\xa1\xd6\xcc\xa7\xd1\x34\x71\x95\x40\xed\xfe\xbe\xbe\x7b\xd0\x7a\x87\x56\xb0\xbd\xe3\x98\x86\x76\xeb\x3c\xd5\x27\x00\x00\xff\xff\xd0\xa4\x2a\x22\xe6\x00\x00\x00")

func srcTemplatesTemplatesTagHtmlBytes() ([]byte, error) {
	return bindataRead(
		_srcTemplatesTemplatesTagHtml,
		"src/templates/templates/tag.html",
	)
}

func srcTemplatesTemplatesTagHtml() (*asset, error) {
	bytes, err := srcTemplatesTemplatesTagHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "src/templates/templates/tag.html", size: 230, mode: os.FileMode(420), modTime: time.Unix(1450391726, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"src/templates/archives.html": srcTemplatesArchivesHtml,
	"src/templates/article/article.html": srcTemplatesArticleArticleHtml,
	"src/templates/article/disqus.html": srcTemplatesArticleDisqusHtml,
	"src/templates/article/sharethis.html": srcTemplatesArticleSharethisHtml,
	"src/templates/atom.xml": srcTemplatesAtomXml,
	"src/templates/base/analytics.html": srcTemplatesBaseAnalyticsHtml,
	"src/templates/base/base.html": srcTemplatesBaseBaseHtml,
	"src/templates/base/footer.html": srcTemplatesBaseFooterHtml,
	"src/templates/base/header.html": srcTemplatesBaseHeaderHtml,
	"src/templates/category.html": srcTemplatesCategoryHtml,
	"src/templates/index.html": srcTemplatesIndexHtml,
	"src/templates/page.html": srcTemplatesPageHtml,
	"src/templates/tag.html": srcTemplatesTagHtml,
	"src/templates/templates/archives.html": srcTemplatesTemplatesArchivesHtml,
	"src/templates/templates/article/article.html": srcTemplatesTemplatesArticleArticleHtml,
	"src/templates/templates/article/disqus.html": srcTemplatesTemplatesArticleDisqusHtml,
	"src/templates/templates/article/sharethis.html": srcTemplatesTemplatesArticleSharethisHtml,
	"src/templates/templates/atom.xml": srcTemplatesTemplatesAtomXml,
	"src/templates/templates/base/analytics.html": srcTemplatesTemplatesBaseAnalyticsHtml,
	"src/templates/templates/base/base.html": srcTemplatesTemplatesBaseBaseHtml,
	"src/templates/templates/base/footer.html": srcTemplatesTemplatesBaseFooterHtml,
	"src/templates/templates/base/header.html": srcTemplatesTemplatesBaseHeaderHtml,
	"src/templates/templates/category.html": srcTemplatesTemplatesCategoryHtml,
	"src/templates/templates/index.html": srcTemplatesTemplatesIndexHtml,
	"src/templates/templates/page.html": srcTemplatesTemplatesPageHtml,
	"src/templates/templates/tag.html": srcTemplatesTemplatesTagHtml,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"src": &bintree{nil, map[string]*bintree{
		"templates": &bintree{nil, map[string]*bintree{
			"archives.html": &bintree{srcTemplatesArchivesHtml, map[string]*bintree{}},
			"article": &bintree{nil, map[string]*bintree{
				"article.html": &bintree{srcTemplatesArticleArticleHtml, map[string]*bintree{}},
				"disqus.html": &bintree{srcTemplatesArticleDisqusHtml, map[string]*bintree{}},
				"sharethis.html": &bintree{srcTemplatesArticleSharethisHtml, map[string]*bintree{}},
			}},
			"atom.xml": &bintree{srcTemplatesAtomXml, map[string]*bintree{}},
			"base": &bintree{nil, map[string]*bintree{
				"analytics.html": &bintree{srcTemplatesBaseAnalyticsHtml, map[string]*bintree{}},
				"base.html": &bintree{srcTemplatesBaseBaseHtml, map[string]*bintree{}},
				"footer.html": &bintree{srcTemplatesBaseFooterHtml, map[string]*bintree{}},
				"header.html": &bintree{srcTemplatesBaseHeaderHtml, map[string]*bintree{}},
			}},
			"category.html": &bintree{srcTemplatesCategoryHtml, map[string]*bintree{}},
			"index.html": &bintree{srcTemplatesIndexHtml, map[string]*bintree{}},
			"page.html": &bintree{srcTemplatesPageHtml, map[string]*bintree{}},
			"tag.html": &bintree{srcTemplatesTagHtml, map[string]*bintree{}},
			"templates": &bintree{nil, map[string]*bintree{
				"archives.html": &bintree{srcTemplatesTemplatesArchivesHtml, map[string]*bintree{}},
				"article": &bintree{nil, map[string]*bintree{
					"article.html": &bintree{srcTemplatesTemplatesArticleArticleHtml, map[string]*bintree{}},
					"disqus.html": &bintree{srcTemplatesTemplatesArticleDisqusHtml, map[string]*bintree{}},
					"sharethis.html": &bintree{srcTemplatesTemplatesArticleSharethisHtml, map[string]*bintree{}},
				}},
				"atom.xml": &bintree{srcTemplatesTemplatesAtomXml, map[string]*bintree{}},
				"base": &bintree{nil, map[string]*bintree{
					"analytics.html": &bintree{srcTemplatesTemplatesBaseAnalyticsHtml, map[string]*bintree{}},
					"base.html": &bintree{srcTemplatesTemplatesBaseBaseHtml, map[string]*bintree{}},
					"footer.html": &bintree{srcTemplatesTemplatesBaseFooterHtml, map[string]*bintree{}},
					"header.html": &bintree{srcTemplatesTemplatesBaseHeaderHtml, map[string]*bintree{}},
				}},
				"category.html": &bintree{srcTemplatesTemplatesCategoryHtml, map[string]*bintree{}},
				"index.html": &bintree{srcTemplatesTemplatesIndexHtml, map[string]*bintree{}},
				"page.html": &bintree{srcTemplatesTemplatesPageHtml, map[string]*bintree{}},
				"tag.html": &bintree{srcTemplatesTemplatesTagHtml, map[string]*bintree{}},
			}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

